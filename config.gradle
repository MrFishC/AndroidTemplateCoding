
//ext:自定义属性,所有关于版本的信息都利用ext放在另一个自己新建的gradle文件中集中管理
ext{

    android = [
            compileSdkVersion       : 30,
            applicationId           : 'jack.mvvmanddatabinding',
            minSdkVersion           : 21,
            targetSdkVersion        : 30,
            versionCode             : 1,
            versionName             : "1.0"
    ]

    version = [
            androidSupportSdkVersion: "30.0.0",
            junit_version           : "4.13.1",
            ext_junit_version       : "1.1.2",
            espresso_core_version   : "3.2.0",

            //support
            appcompat_version       : "1.2.0",

            lifecycle_version       : "2.2.0",
            
            room_version            : "2.2.5"
    ]

    dependencies = [

            "appcompat"         : "androidx.appcompat:appcompat:${version["appcompat_version"]}",

            //view
            "constraint"        : 'androidx.constraintlayout:constraintlayout:1.1.3',

            //https://developer.android.google.cn/jetpack/androidx/releases/lifecycle?hl=zh_cn#version_230_2

            //ViewModel
            "viewModel"         : "androidx.lifecycle:lifecycle-viewmodel:${version["lifecycle_version"]}",

            // LiveData
            "liveData"          : "androidx.lifecycle:lifecycle-livedata:${version["lifecycle_version"]}",

            // Lifecycles only (without ViewModel or LiveData)
            "lifecycles"        : "androidx.lifecycle:lifecycle-runtime:${version["lifecycle_version"]}",

            // Saved state module for ViewModel
            "stateViewModel"    : "androidx.lifecycle:lifecycle-viewmodel-savedstate:${version["lifecycle_version"]}",

            // alternately - if using Java8, use the following instead of lifecycle-compiler
            "lifecycleCommon"   : "androidx.lifecycle:lifecycle-common-java8:${version["lifecycle_version"]}",

            //Annotation processor      annotationProcessor
            "lifecycle-compiler": "androidx.lifecycle:lifecycle-compiler:${version["lifecycle_version"]}",

            //room
            "room-runtime"      : "androidx.room:room-runtime:${version["room_version"]}",

            // optional - RxJava support for Room       //Test Guava
            "room-rxjava2"      : "androidx.room:room-rxjava2:${version["room_version"]}",

            "arouter-compiler"  : "com.alibaba:arouter-compiler:1.2.2",

            "arouter-api"       : "com.alibaba:arouter-api:1.4.1",

            //tools

            //test
            "androidJUnitRunner": "androidx.test.runner.AndroidJUnitRunner",
            "junit"             : "junit:junit:${version["junit_version"]}",
            "ext:junit"         : "androidx.test.ext:junit:${version["ext_junit_version"]}",
            "espresso-core"     : "androidx.test.espresso:espresso-core:${version["espresso_core_version"]}",

    ]
}